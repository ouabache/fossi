   
`VARIANT`MB
    #( .CNTRL_RST        (8'b0),
       .CHAR_COLOR_RST   (8'h1c),
       .BACK_COLOR_RST   (8'h01),
       .CURSOR_COLOR_RST (8'he0))

 vga_micro_reg
 ( 
   .clk                ( clk               ),
   .reset              ( reset             ),
   .enable             ( enable            ),
   .cs                 ( cs                ),      
   .wr                 ( wr                ),
   .rd                 ( rd                ),
   .byte_lanes         ( 1'b1              ),
   .addr               ( addr              ),
   .wdata              ( wdata             ),
   .rdata              ( rdata             ),


     .ascii_data_cs        (),
     .ascii_data_dec       (),
     .ascii_data       (),
     .next_ascii_data       (),
     .add_l_cs       (),
     .add_l_dec       (),
     .add_l       (),
     .next_add_l       (),
     .add_h_cs       (),
     .add_h_dec       (),
     .add_h       (),
     .next_add_h       (),
     .vadd_l_cs       (),
     .vadd_l_dec       (),
     .vadd_h_cs       (),
     .vadd_h_dec       (),
     .cntrl_cs       (),
     .cntrl_dec       (),
     .cntrl_wr_0       (),
     .char_color_cs       (),
     .char_color_dec       (),
     .char_color_wr_0       (),
     .back_color_cs       (),
     .back_color_dec       (),
     .back_color_wr_0       (),
     .cursor_color_cs       (),
     .cursor_color_dec       (),
     .cursor_color_wr_0       (),



   .cntrl              ( cntrl             ),
   .char_color         ( char_color        ),
   .back_color         ( back_color        ),
   .cursor_color       ( cursor_color      ),

   .next_cntrl         ( cntrl             ),
   .next_char_color    ( char_color        ),
   .next_back_color    ( back_color        ),
   .next_cursor_color  ( cursor_color      ),


   .cntrl_rdata         ( cntrl             ),
   .char_color_rdata    ( char_color        ),
   .back_color_rdata    ( back_color        ),
   .cursor_color_rdata  ( cursor_color      ),
   


   .vadd_l_rdata        ( vga_address[7:0]  ),
   .vadd_h_rdata        ( vga_address[15:8] ),

   .ascii_data_wr_0     ( ascii_data_wr     ),
   .add_l_wr_0          ( add_l_wr          ),
   .add_h_wr_0          ( add_h_wr          ));
   



always@(posedge clk)
if (reset)     ascii_load          <= 1'b0;
else           ascii_load          <= ascii_data_wr;
  



always@(posedge clk)
if (reset)      add_l_load         <= 1'b0;
else            add_l_load         <= add_l_wr;




always@(posedge clk)
if (reset)      add_h_load         <= 1'b0;
else            add_h_load         <= add_h_wr;











always@(posedge clk)
if (reset)     lat_wdata  <= 8'h00;   
else           lat_wdata  <= wdata;   
