
   
// shift  buffer and shadow
reg [BITS-1:0]  buffer;

always @(posedge shiftcapture_dr_clk or posedge test_logic_reset)
  if (test_logic_reset)                 buffer <= RESET_VALUE;
  else 
  if (select && capture_dr)             buffer <= capture_value;
  else 
  if (select && shift_dr)               buffer <= { tdi, buffer[BITS-1:1] };
  else                                  buffer <= buffer;


  always @(posedge update_dr_clk  or posedge test_logic_reset)
   if (test_logic_reset)               update_value <= RESET_VALUE;
   else 
   if (select)                         update_value <= buffer;
   else                                update_value <= update_value;



   
assign tdo = buffer[0];


