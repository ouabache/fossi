eval 'exec `which perl` -S $0 ${1+"$@"}'
   if 0;

#/**********************************************************************/
#/*                                                                    */
#/*             -------                                                */
#/*            /   SOC  \                                              */
#/*           /    GEN   \                                             */
#/*          /    TOOL    \                                            */
#/*          ==============                                            */
#/*          |            |                                            */
#/*          |____________|                                            */
#/*                                                                    */
#/*                                                                    */
#/*                                                                    */
#/*  Author(s):                                                        */
#/*      - John Eaton, jt_eaton@opencores.org                          */
#/*                                                                    */
#/**********************************************************************/
#/*                                                                    */
#/*    Copyright (C) <2010-2011>  <Ouabache Design Works>              */
#/*                                                                    */
#/*  This source file may be used and distributed without              */
#/*  restriction provided that this copyright statement is not         */
#/*  removed from the file and that any derivative work contains       */
#/*  the original copyright notice and the associated disclaimer.      */
#/*                                                                    */
#/*  This source file is free software; you can redistribute it        */
#/*  and/or modify it under the terms of the GNU Lesser General        */
#/*  Public License as published by the Free Software Foundation;      */
#/*  either version 2.1 of the License, or (at your option) any        */
#/*  later version.                                                    */
#/*                                                                    */
#/*  This source is distributed in the hope that it will be            */
#/*  useful, but WITHOUT ANY WARRANTY; without even the implied        */
#/*  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR           */
#/*  PURPOSE.  See the GNU Lesser General Public License for more      */
#/*  details.                                                          */
#/*                                                                    */
#/*  You should have received a copy of the GNU Lesser General         */
#/*  Public License along with this source; if not, download it        */
#/*  from http://www.opencores.org/lgpl.shtml                          */
#/*                                                                    */
#/**********************************************************************/



############################################################################
# General PERL config
############################################################################
use Getopt::Long;
use English;
use File::Basename;
use Cwd;
use XML::LibXML;
use lib './tools';
use sys::lib;
use yp::lib;


$OUTPUT_AUTOFLUSH = 1; # set autoflush of stdout to TRUE.


############################################################################
### Process the options
############################################################################

Getopt::Long::config("require_order", "prefix=-");
GetOptions("h","help",
           "envidentifier=s" => \$envidentifier,
           "prefix=s" => \$prefix,
           "vendor=s" => \$vendor,
           "library=s" => \$library,
           "version=s" => \$version,
           "component=s" => \$component,
           "encoding=s" => \$encoding,
           "terse" 
) || die "(use '$program_name -h' for help)";


##############################################################################
## Help option
##############################################################################
if ( $opt_h  or $opt_help  ) 
   { 
   print "\n gen_fizzim  -work_site /work/ -library library -component component  -version version -encoding [onehot] -terse source_file destination_file";
   print "\n";
   exit 1;
   }


##############################################################################
## 
##############################################################################



$home = cwd();

my $cmd;   


my $source             = $ARGV[0];
my $destination        = $ARGV[1];



my $lib_comp_sep    = yp::lib::find_lib_comp_sep($vendor,$library,$component);




#unless ($encoding) {$encoding = "twohot";}
my $variant;
 if($version)       {$variant   = "${component}_${version}";}
 else               {$variant   = "${component}";}

#############################################################################
## 
## wrapper for fizzim script
## 
#############################################################################

  $cmd = "${home}/tools/fizzim/fizzim_520/fizzim.pl";
  if   (defined $encoding  )  {$cmd =  "$cmd -encoding $encoding";}
  if   ($opt_terse )  {$cmd =  "$cmd -terse";}
  $cmd =  "$cmd <${home}${prefix}/${vendor}__${library}${lib_comp_sep}${component}/${source}";
  $cmd =  "$cmd >${home}${prefix}/${vendor}__${library}${lib_comp_sep}${component}/${destination}";
  $cmd =  "${cmd}\n";
  print "FIZZIM:::   $cmd  \n";
if (system($cmd)) {
  print "gen_fizzim ${vendor}__${library}${lib_comp_sep}${component}/${destination}   finished\n";
 }
1




       














