eval 'exec `which perl` -S $0 ${1+"$@"}'
   if 0;

#/**********************************************************************/
#/*                                                                    */
#/*             -------                                                */
#/*            /   SOC  \                                              */
#/*           /    GEN   \                                             */
#/*          /    TOOL    \                                            */
#/*          ==============                                            */
#/*          |            |                                            */
#/*          |____________|                                            */
#/*                                                                    */
#/*                                                                    */
#/*                                                                    */
#/*  Author(s):                                                        */
#/*      - John Eaton, jt_eaton@opencores.org                          */
#/*                                                                    */
#/**********************************************************************/
#/*                                                                    */
#/*    Copyright (C) <2010-2011>  <Ouabache Design Works>              */
#/*                                                                    */
#/*  This source file may be used and distributed without              */
#/*  restriction provided that this copyright statement is not         */
#/*  removed from the file and that any derivative work contains       */
#/*  the original copyright notice and the associated disclaimer.      */
#/*                                                                    */
#/*  This source file is free software; you can redistribute it        */
#/*  and/or modify it under the terms of the GNU Lesser General        */
#/*  Public License as published by the Free Software Foundation;      */
#/*  either version 2.1 of the License, or (at your option) any        */
#/*  later version.                                                    */
#/*                                                                    */
#/*  This source is distributed in the hope that it will be            */
#/*  useful, but WITHOUT ANY WARRANTY; without even the implied        */
#/*  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR           */
#/*  PURPOSE.  See the GNU Lesser General Public License for more      */
#/*  details.                                                          */
#/*                                                                    */
#/*  You should have received a copy of the GNU Lesser General         */
#/*  Public License along with this source; if not, download it        */
#/*  from http://www.opencores.org/lgpl.shtml                          */
#/*                                                                    */
#/**********************************************************************/


############################################################################
# General PERL config
############################################################################
use Getopt::Long;
use English;
use File::Basename;
use Cwd;
use XML::LibXML;
use lib './tools';
use sys::lib;
use yp::lib;

$OUTPUT_AUTOFLUSH = 1; # set autoflush of stdout to TRUE.


############################################################################
### Process the options
############################################################################
Getopt::Long::config("require_order", "prefix=-");
GetOptions("h","help",
) || die "(use '$program_name -h' for help)";




##############################################################################
## Help option
##############################################################################
if ( $opt_h or $opt_help  ) 
  { print "\n run_ise vendor__library  syn_library_path chip_name chip_part";
    print "\n";
    exit 1;
  }


#/**********************************************************************/
#/*  Process each library by finding any ip-xact file in any component */
#/*                                                                    */
#/*  Each ip-xact file is parsed and it's filename and the names of any*/
#/*  modules that it uses are saved.                                   */
#/*                                                                    */
#/*                                                                    */
#/**********************************************************************/

my $home              = cwd();
my $prefix         = yp::lib::get_workspace();


my $vendor           = $ARGV[0];
my $library          = $ARGV[1];
my $syn_library_path = $ARGV[2];
my $chip_name        = $ARGV[3];
my $chip_part        = $ARGV[4]; 
my $chip_tool        = $ARGV[5];


if($chip_tool eq "ise")
{
chdir  "./${prefix}/${vendor}__${library}${syn_library_path}/${chip_tool}/${chip_name}";

$cmd ="echo \"run -ifn ./filelists/${chip_name}.ISE -ifmt mixed -top $chip_name  -ofn  ${chip_name}.ngc -ofmt NGC  -p $chip_part -opt_mode Speed -opt_level 1 \" > Yst;   \n";
if (system($cmd)) {}


$cmd ="make xst \n";
if (system($cmd)) {}


$cmd ="make fpga \n";
if (system($cmd)) {}


$cmd ="make bitgen \n";
if (system($cmd)) {}
     
}

elsif ($chip_tool eq "ara")
{
chdir  "./${prefix}/${vendor}__${library}${syn_library_path}/${chip_tool}/${chip_name}";

print "ARA Tool NOW  \n";


$cmd= "yosys -p \"synth_ice40 -blif result.blif\" -s ./filelists/${chip_name}.ARA > ara.log \n";
if (system($cmd)) {}

$cmd= "arachne-pnr -d 1k -p ./target/padring.pcf result.blif -o result.asc >> ara.log\n";
if (system($cmd)) {}

$cmd= "icepack result.asc fpga.bin >> ara.log \n";
if (system($cmd)) {}

$cmd = "icetime -tmd hx1k result.asc >> ara.log\n";
if (system($cmd)) {}



}


chdir  "$home";








