eval 'exec `which perl` -S $0 ${1+"$@"}'
   if 0;
#/****************************************************************************/
#/*                                                                          */
#/*   SOCGEN Design for Reuse toolset                                        */
#/*                                                                          */
#/*   Version 1.0.0                                                          */
#/*                                                                          */
#/*   Author(s):                                                             */
#/*      - John Eaton, z3qmtr45@gmail.com                                    */
#/*                                                                          */
#/****************************************************************************/
#/*                                                                          */
#/*                                                                          */
#/*             Copyright 2016 John T Eaton                                  */ 
#/*                                                                          */
#/* Licensed under the Apache License, Version 2.0 (the "License");          */
#/* you may not use this file except in compliance with the License.         */
#/* You may obtain a copy of the License at                                  */
#/*                                                                          */
#/*    http://www.apache.org/licenses/LICENSE-2.0                            */
#/*                                                                          */
#/* Unless required by applicable law or agreed to in writing, software      */
#/* distributed under the License is distributed on an "AS IS" BASIS,        */
#/* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. */
#/* See the License for the specific language governing permissions and      */
#/* limitations under the License.                                           */
#/*                                                                          */
#/*                                                                          */
#/****************************************************************************/


############################################################################
# General PERL config
############################################################################
use Getopt::Long;
use English;
use File::Basename;
use Cwd;
use XML::LibXML;
use lib './tools';
use sys::lib;
use yp::lib;


$OUTPUT_AUTOFLUSH = 1; # set autoflush of stdout to TRUE.


############################################################################
### Process the options
############################################################################

Getopt::Long::config("require_order", "prefix=-");
GetOptions("h","help",
           "envidentifier=s" => \$envidentifier,
           "prefix=s" => \$prefix,
           "vendor=s" => \$vendor,
           "library=s" => \$library,
           "component=s" => \$component,
           "version=s" => \$version,
           "dest_dir=s" => \$dest_dir,
           "view=s" => \$view
) || die "(use '$program_name -h' for help)";


##############################################################################
## Help option
##############################################################################
if ( $opt_h  or ($opt_help) ) 
   { 
   print "\n gen_verilogLib -envidentifier *simulation* -prefix /work  -vendor vendor_name -library  library_name  -component component_name -version version_name -dest_dir dest_dir -view  view";
   print "\n";
   exit 1;
   }


##############################################################################
## 
##############################################################################

$home = cwd();

unless (defined $dest_dir && length $dest_dir > 0){$dest_dir ="../views";}

my $cmd ="./tools/verilog/gen_elab_verilogLib -envidentifier $envidentifier -prefix $prefix  -vendor $vendor -library  $library  -component $component -version $version -dest_dir $dest_dir -view  $view  \n";

if(system ($cmd)){}

my @configs  = yp::lib::get_component_configs($vendor,$library,$component,$version);

foreach my $config (@configs)
{

print "\n ---GEN_verilogLib -envidentifier $envidentifier -prefix $prefix  -vendor $vendor -library  $library  -component $component -version $version -dest_dir $dest_dir -viem  $view \n";

$cmd ="./tools/verilog/gen_elab_verilogLib -envidentifier $envidentifier -prefix $prefix  -vendor $vendor -library  $library  -component $component -version $version -dest_dir $dest_dir -view  $view -configuration $config \n";
if(system ($cmd)){}
}


 

1
    














