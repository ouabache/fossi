eval 'exec `which perl` -S $0 ${1+"$@"}'
   if 0;
#/**********************************************************************/
#/*                                                                    */
#/*             -------                                                */
#/*            /   SOC  \                                              */
#/*           /    GEN   \                                             */
#/*          /    TOOL    \                                            */
#/*          ==============                                            */
#/*          |            |                                            */
#/*          |____________|                                            */
#/*                                                                    */
#/*                                                                    */
#/*                                                                    */
#/*                                                                    */
#/*  Author(s):                                                        */
#/*      - John Eaton, jt_eaton@opencores.org                          */
#/*                                                                    */
#/**********************************************************************/
#/*                                                                    */
#/*    Copyright (C) <2010-2011>  <Ouabache Design Works>              */
#/*                                                                    */
#/*  This source file may be used and distributed without              */
#/*  restriction provided that this copyright statement is not         */
#/*  removed from the file and that any derivative work contains       */
#/*  the original copyright notice and the associated disclaimer.      */
#/*                                                                    */
#/*  This source file is free software; you can redistribute it        */
#/*  and/or modify it under the terms of the GNU Lesser General        */
#/*  Public License as published by the Free Software Foundation;      */
#/*  either version 2.1 of the License, or (at your option) any        */
#/*  later version.                                                    */
#/*                                                                    */
#/*  This source is distributed in the hope that it will be            */
#/*  useful, but WITHOUT ANY WARRANTY; without even the implied        */
#/*  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR           */
#/*  PURPOSE.  See the GNU Lesser General Public License for more      */
#/*  details.                                                          */
#/*                                                                    */
#/*  You should have received a copy of the GNU Lesser General         */
#/*  Public License along with this source; if not, download it        */
#/*  from http://www.opencores.org/lgpl.shtml                          */
#/*                                                                    */
#/**********************************************************************/


############################################################################
# General PERL config
############################################################################
use Getopt::Long;
use English;
use File::Basename;
use Cwd;
use Scalar::Util qw(looks_like_number);
use XML::LibXML;
use lib './tools';
use sys::lib;
use yp::lib;
use BerkeleyDB;


$OUTPUT_AUTOFLUSH = 1; # set autoflush of stdout to TRUE.


############################################################################
### Process the options
############################################################################
Getopt::Long::config("require_order", "prefix=-");
GetOptions("h","help",
           "envidentifier=s"  => \$envidentifier,
           "prefix=s"         => \$prefix,
           "vendor=s"         => \$vendor,
           "library=s"        => \$library,
           "version=s"        => \$version,
           "component=s"      => \$component,
           "destination=s"    => \$destination,
           "local_parameters"
) || die "(use '$program_name -h' for help)";


##############################################################################
## Help option
##############################################################################
if ( $opt_h  or $opt_help  ) 
  { print "\n gen_verilog -envidentifier :*Simulation:*  -prefix /work/children -vendor vendor_name -library library_name  -component component_name  -version version_name -destination destination -configuration configuration -local_parameters  \n";
    exit 1;
  }



#############################################################################
## 
## 
#############################################################################

$home = cwd();

unless( $destination) {$destination = "${component}_${version}";}

print "\n ---GEN_verilog    -envidentifier $envidentifier -prefix  $prefix -vendor $vendor -library $library -component $component -version $version   -destination  $destination ";



my $cmd = "./tools/verilog/gen_elab_verilog -envidentifier $envidentifier -prefix  $prefix -vendor $vendor -library $library -component $component -version $version -destination  $destination   ";

my $cmd;

if($opt_local_parameters)
{
$cmd = "./tools/verilog/gen_elab_verilog -envidentifier $envidentifier -prefix  $prefix -vendor $vendor -library $library -component $component -version $version -destination  $destination -local_parameters   \n";
}
else
{
$cmd = "./tools/verilog/gen_elab_verilog -envidentifier $envidentifier -prefix  $prefix -vendor $vendor -library $library -component $component -version $version -destination  $destination  \n";
}



if(system($cmd)){}


print "Getting get_component_configs($vendor,$library,$component,$version \n";

my @configs  = yp::lib::get_component_configs($vendor,$library,$component,$version);

foreach my $config (@configs)

{
print "GEN_verilog  $vendor $library $component $version $config\n";
  
$cmd = "./tools/verilog/gen_elab_verilog -envidentifier $envidentifier -prefix  $prefix -vendor $vendor -library $library -component $component -version $version -destination  $destination -configuration $config  -local_parameters \n";
if(system($cmd)){}
}






1

